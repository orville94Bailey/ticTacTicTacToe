"<html>\n"+
"\n"+
"<head>\n"+
"    <script src='https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.js'></script>\n"+
"</head>\n"+
"\n"+
"<body>\n"+
"</body>\n"+
"\n"+
"</html>\n"+
"\n"+
"<script>\n"+
"    let playerTurn = 0;\n"+
"    let nextMove = null;\n"+
"\n"+
"    let board = Array.from(Array(9), () => new Array(9))\n"+
"    let largeBoard = Array.from(Array(3), () => new Array(3));\n"+
"    let winner = {}\n"+
"\n"+
"    function setup() {\n"+
"        createCanvas(300, 300);\n"+
"    }\n"+
"\n"+
"    function draw() {\n"+
"        if (winner.player == undefined) {\n"+
"            hilightRequiredQuad()\n"+
"            strokeWeight(3);\n"+
"            //big\n"+
"            line(0, 100, 300, 100)\n"+
"            line(0, 200, 300, 200)\n"+
"            line(100, 0, 100, 300)\n"+
"            line(200, 0, 200, 300)\n"+
"\n"+
"            drawLittleBoard(0, 0)\n"+
"            drawLittleBoard(100, 0)\n"+
"            drawLittleBoard(200, 0)\n"+
"\n"+
"            drawLittleBoard(0, 100)\n"+
"            drawLittleBoard(100, 100)\n"+
"            drawLittleBoard(200, 100)\n"+
"\n"+
"            drawLittleBoard(0, 200)\n"+
"            drawLittleBoard(100, 200)\n"+
"            drawLittleBoard(200, 200)\n"+
"\n"+
"            strokeWeight(3)\n"+
"            for (let y = 0; y < 9; y++) {\n"+
"                for (let x = 0; x < 9; x++) {\n"+
"                    let xLoc = (Math.floor(x / 3) * 100) + (x % 3 * 33) + 15\n"+
"                    let yLoc = (Math.floor(y / 3) * 100) + (y % 3 * 33) + 15\n"+
"                    if (board[x][y] == 'x') {\n"+
"                        drawX(xLoc, yLoc)\n"+
"                    } else if (board[x][y] == 'o') {\n"+
"                        drawCircle(xLoc, yLoc)\n"+
"                    }\n"+
"                }\n"+
"            }\n"+
"\n"+
"            for (let y = 0; y < 3; y++) {\n"+
"                for (let x = 0; x < 3; x++) {\n"+
"                    if (largeBoard[x][y] == 'x') {\n"+
"                        markWin({ x: x, y: y }, 'x')\n"+
"                    } else if (largeBoard[x][y] == 'o') {\n"+
"                        markWin({ x: x, y: y }, 'o')\n"+
"                    }\n"+
"                }\n"+
"            }\n"+
"        }\n"+
"    }\n"+
"\n"+
"    function drawLittleBoard(xOffset, yOffset) {\n"+
"        strokeWeight(2)\n"+
"        let aThird = 30;\n"+
"        let centerOffset = (100 - (aThird * 3)) / 2\n"+
"        line(xOffset + aThird + centerOffset, yOffset + centerOffset, xOffset + aThird + centerOffset, yOffset + (3 * aThird) + centerOffset)\n"+
"        line(xOffset + (2 * aThird) + centerOffset, yOffset + centerOffset, xOffset + (2 * aThird) + centerOffset, yOffset + (3 * aThird) + centerOffset)\n"+
"        line(xOffset + centerOffset, yOffset + aThird + centerOffset, xOffset + (3 * aThird) + centerOffset, yOffset + aThird + centerOffset)\n"+
"        line(xOffset + centerOffset, yOffset + (2 * aThird) + centerOffset, xOffset + (3 * aThird) + centerOffset, yOffset + (2 * aThird) + centerOffset)\n"+
"    }\n"+
"\n"+
"    function drawCircle(x, y) {\n"+
"        ellipse(x, y, 25)\n"+
"    }\n"+
"\n"+
"    function drawX(x, y) {\n"+
"        line(x - 15, y - 15, x + 15, y + 15)\n"+
"        line(x - 15, y + 15, x + 15, y - 15)\n"+
"    }\n"+
"\n"+
"    function mouseClicked() {\n"+
"        let outerCoords = getQuadrant()\n"+
"        let innerCoords = getInnerQuadrant()\n"+
"        if (isValidMove(outerCoords, innerCoords)) {\n"+
"            let x = (outerCoords.x * 100) + (innerCoords.x * 33) + 15\n"+
"            let y = (outerCoords.y * 100) + (innerCoords.y * 33) + 15\n"+
"            if (playerTurn % 2 === 1) {\n"+
"                drawCircle(x, y)\n"+
"                markBoard(outerCoords, innerCoords, 'o')\n"+
"            } else {\n"+
"                drawX(x, y)\n"+
"                markBoard(outerCoords, innerCoords, 'x')\n"+
"            }\n"+
"            let player = playerTurn % 2 == 1 ? 'o' : 'x';\n"+
"            checkForWinner(outerCoords, player)\n"+
"            playerTurn += 1;\n"+
"            nextMove = innerCoords;\n"+
"        }\n"+
"        clear()\n"+
"        return false;\n"+
"    }\n"+
"\n"+
"    function getQuadrant() {\n"+
"        return { x: Math.floor(mouseX / 100), y: Math.floor(mouseY / 100) }\n"+
"    }\n"+
"\n"+
"    function getInnerQuadrant() {\n"+
"        return { x: Math.floor((mouseX % 100) / 33), y: Math.floor((mouseY % 100) / 33) }\n"+
"    }\n"+
"\n"+
"    function markBoard(outerCoords, innerCoords, player) {\n"+
"        board[(outerCoords.x * 3) + innerCoords.x][(outerCoords.y * 3) + innerCoords.y] = player;\n"+
"    }\n"+
"\n"+
"    function checkForWinner(outerCoords, player) {\n"+
"        var result;\n"+
"        for (let y = (outerCoords.y * 3); y <= (outerCoords.y * 3) + 2; y++) {\n"+
"            //top to bottom\n"+
"            for (let x = (outerCoords.x * 3); x <= (outerCoords.x * 3) + 2; x++) {\n"+
"                //left to right\n"+
"                if (board[x][y] == player) {\n"+
"                    result = result | (1 << ((x % 3) + ((y % 3) * 3)))\n"+
"                }\n"+
"            }\n"+
"        }\n"+
"        winningValues.forEach(x => {\n"+
"            if ((x & result) == x) {\n"+
"                largeBoard[outerCoords.x][outerCoords.y] = player\n"+
"                markWin(outerCoords, player)\n"+
"                checkForOverallWinner(player)\n"+
"            }\n"+
"        })\n"+
"    }\n"+
"\n"+
"    function markWin(outerCoords, player) {\n"+
"        let x = outerCoords.x * 100;\n"+
"        x += 50;\n"+
"        let y = outerCoords.y * 100;\n"+
"        y += 50;\n"+
"        if (player == 'x') {\n"+
"            strokeWeight(8)\n"+
"            line(x - 50, y - 50, x + 50, y + 50)\n"+
"            line(x - 50, y + 50, x + 50, y - 50)\n"+
"        } else {\n"+
"            ellipse(x, y, 90)\n"+
"        }\n"+
"    }\n"+
"\n"+
"    function checkForOverallWinner(player) {\n"+
"        var result;\n"+
"        for (let y = 0; y <= 2; y++) {\n"+
"            //top to bottom\n"+
"            for (let x = 0; x <= 2; x++) {\n"+
"                //left to right\n"+
"                if (largeBoard[x][y] == player) {\n"+
"                    result = result | (1 << (x + (y * 3)))\n"+
"                }\n"+
"            }\n"+
"        }\n"+
"\n"+
"        if (winningValues.indexOf(result) != -1) {\n"+
"            winner = { player: player };\n"+
"        }\n"+
"    }\n"+
"\n"+
"    function isValidMove(outerCoords, innerCoords) {\n"+
"        if (winner.player == undefined) {\n"+
"            if (isValidQuadrant(outerCoords)) {\n"+
"                if (largeBoard[outerCoords.x][outerCoords.y] == undefined) {\n"+
"                    if (board[(outerCoords.x * 3) + innerCoords.x][(outerCoords.y * 3) + innerCoords.y] == undefined) {\n"+
"                        return true;\n"+
"                    }\n"+
"                }\n"+
"            }\n"+
"        }\n"+
"        return false;\n"+
"    }\n"+
"\n"+
"    function isValidQuadrant(outerCoords) {\n"+
"        if (nextMove == null) { return true }\n"+
"        if (largeBoard[nextMove.x][nextMove.y] != undefined) {\n"+
"            return true;\n"+
"        } else if ((outerCoords.x == nextMove.x) && (outerCoords.y == nextMove.y)) {\n"+
"            return true;\n"+
"        }\n"+
"        return false;\n"+
"    }\n"+
"\n"+
"    function hilightRequiredQuad() {\n"+
"        if (nextMove == null) { return; }\n"+
"        if (largeBoard[nextMove.x][nextMove.y] != undefined) { return; }\n"+
"        stroke('green');\n"+
"        strokeWeight(6);\n"+
"        rect(nextMove.x * 100, nextMove.y * 100, 100, 100)\n"+
"        stroke('black');\n"+
"    }\n"+
"\n"+
"    function drawWinner(player) {\n"+
"        strokeWeight(2);\n"+
"        textSize(32);\n"+
"        rectMode(CENTER);\n"+
"        textAlign(CENTER,CENTER);\n"+
"        fill('rgba(255,255,255,255)');\n"+
"        rect(150,150,275,60);\n"+
"        fill('black');\n"+
"        text(player.toUpperCase() + ' wins this time!',150,150);\n"+
"        rectMode(CORNER);\n"+
"    }\n"+
"\n"+
"    let winningValues = [\n"+
"        parseInt('100100100', 2),\n"+
"        parseInt('010010010', 2),\n"+
"        parseInt('001001001', 2),\n"+
"        parseInt('111000000', 2),\n"+
"        parseInt('000111000', 2),\n"+
"        parseInt('000000111', 2),\n"+
"        parseInt('100010001', 2),\n"+
"        parseInt('001010100', 2)\n"+
"    ]\n"+
"</script>\n"